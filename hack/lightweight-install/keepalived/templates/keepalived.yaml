apiVersion: v1
kind: DaemonSet
metadata:
  {{- if .Values.labels }}
  labels:
{{ toYaml .Values.labels | indent 4 }}
  {{- end }}
  name: keepalived
  namespace: kube-system
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
spec:
  selector:
{{ toYaml .Values.selector | indent 4 }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
      labels:
{{ toYaml .Values.podLabels | indent 8 }}
    spec:
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.imagePullPolicy }}"
          name: keepalived
          args:
            - --log-console
            - --dont-fork
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - mountPath: /etc/keepalived/
              name: conf-volume
      hostNetwork: true
      volumes:
        - configmap:
            name: keepalived-config
          name: conf-volume

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: keepalived-config
  namespace: tke
data:
  keepalived.conf: |
    global_defs {
        enable_script_security
        script_user root
    }

    vrrp_script chk {
        script "/bin/bash -c 'curl -m1 -k -s https://127.0.0.1:6443/healthz -o/dev/null'"
        interval 2
        weight -10
        fall 3
        rise 1
    }

    vrrp_instance VI_1 {
        state BACKUP
        interface {{ .Values.interface }}
        virtual_router_id {{ template "generate.vrid" . }}
        priority 100
        advert_int 1
        authentication {
            auth_type PASS
            auth_pass 1111
        }
        virtual_ipaddress {
            {{ .Values.vip }}
        }
        track_script {
          chk
        }
    }
